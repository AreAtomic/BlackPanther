{"version":3,"sources":["logo.svg","full.png","marvel.jpg","genou.png","kick.png","griffe.png","logo1.png","logo2.png","logo3.png","logo4.png","ui.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","images","Debout","Kick","Griffe","Genou","classe","App","props","state","active","changeImage","bind","e","this","setState","target","id","bp","document","getElementById","src","className","inactive","image","logo","alt","href","rel","type","Marvel","ui","deboutsvg","onClick","kicksvg","griffesvg","genousvg","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3ff7b2d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.18f5240c.svg\";","module.exports = __webpack_public_path__ + \"static/media/full.ae83ae98.png\";","module.exports = __webpack_public_path__ + \"static/media/marvel.457783a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/genou.2f6cf920.png\";","module.exports = __webpack_public_path__ + \"static/media/kick.37a8ee29.png\";","module.exports = __webpack_public_path__ + \"static/media/griffe.8a91ac45.png\";","module.exports = __webpack_public_path__ + \"static/media/logo1.3d2c4735.png\";","module.exports = __webpack_public_path__ + \"static/media/logo2.2850fee4.png\";","module.exports = __webpack_public_path__ + \"static/media/logo3.ae81b309.png\";","module.exports = __webpack_public_path__ + \"static/media/logo4.a59ac6a9.png\";","module.exports = __webpack_public_path__ + \"static/media/ui.21790531.svg\";","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport Debout from './full.png';\r\nimport Marvel from './marvel.jpg';\r\nimport Genou from './genou.png';\r\nimport Kick from './kick.png';\r\nimport Griffe from './griffe.png';\r\nimport deboutsvg from './logo1.png';\r\nimport kicksvg from './logo2.png';\r\nimport griffesvg from './logo3.png';\r\nimport genousvg from './logo4.png';\r\nimport ui from './ui.svg';\r\nimport './App.css';\r\n\r\nconst images = [Debout, Kick, Griffe, Genou];\r\nconst classe = ['debout', 'kick', 'griffe', 'genou'];\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      active: 1,\r\n    };\r\n    this.changeImage = this.changeImage.bind(this);\r\n  }\r\n\r\n  changeImage(e) {\r\n    this.setState({ active: e.target.id });\r\n    var bp = document.getElementById('bp');\r\n    bp.src = images[e.target.id];\r\n    bp.className = classe[e.target.id];\r\n    var active = document.getElementById(e.target.id);\r\n    if (e.target.id == 0) {\r\n      var inactive = [\r\n        document.getElementById(1),\r\n        document.getElementById(2),\r\n        document.getElementById(3),\r\n      ];\r\n    }\r\n    if (e.target.id == 1) {\r\n      var inactive = [\r\n        document.getElementById(0),\r\n        document.getElementById(2),\r\n        document.getElementById(3),\r\n      ];\r\n    }\r\n    if (e.target.id == 2) {\r\n      var inactive = [\r\n        document.getElementById(0),\r\n        document.getElementById(1),\r\n        document.getElementById(3),\r\n      ];\r\n    }\r\n    if (e.target.id == 3) {\r\n      var inactive = [\r\n        document.getElementById(1),\r\n        document.getElementById(2),\r\n        document.getElementById(0),\r\n      ];\r\n    }\r\n    active.className = 'logo active';\r\n    for (let e in inactive) {\r\n      inactive[e].className = 'logo';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const image = images[0];\r\n    return (\r\n      <div className='container'>\r\n        <header className='header'>\r\n          <img src={logo} className='App-logo' alt='logo' />\r\n          <div className='menu'>\r\n            <a\r\n              className='App-link'\r\n              href='https://aureliensebe.com'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              DESIGNER\r\n            </a>\r\n            <a\r\n              className='App-link'\r\n              href='https://facebook.com/aureliensebe.com'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              Facebook\r\n            </a>\r\n            <a\r\n              className='App-link'\r\n              href='https://instagram.com/aureliensebe'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              Insta\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <div className='menu-button'>\r\n          <input type='button' className='button' />\r\n          <div className='hover'>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n        <div className='main'>\r\n          <div>\r\n            <h1>\r\n              BLACK\r\n              <br />\r\n              <span>PANTHER</span>\r\n            </h1>\r\n            <h2>\"Wakanda forever!\"</h2>\r\n          </div>\r\n          <img src={image} alt='black panther' className='debout' id='bp' />\r\n        </div>\r\n        <div className='footer'>\r\n          <img src={Marvel} className='marvel-image' />\r\n          <div className='marvel'></div>\r\n          <div className='nav'>\r\n            <a target='_blank' href='https://aureliensebe.com'>\r\n              <button>\r\n                <img src={ui} />\r\n                <text>MORE</text>\r\n              </button>\r\n            </a>\r\n            <img\r\n              src={deboutsvg}\r\n              className='logo active'\r\n              id='0'\r\n              onClick={this.changeImage}\r\n            />\r\n            <img\r\n              src={kicksvg}\r\n              className='logo'\r\n              id='1'\r\n              onClick={this.changeImage}\r\n            />\r\n            <img\r\n              src={griffesvg}\r\n              className='logo'\r\n              id='2'\r\n              onClick={this.changeImage}\r\n            />\r\n            <img\r\n              src={genousvg}\r\n              className='logo'\r\n              id='3'\r\n              onClick={this.changeImage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}